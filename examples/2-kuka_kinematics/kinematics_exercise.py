import numpy as np

d = [0.1575, 0.2025, 0.2045, 0.2155, 0.1845, 0.2155, 0.081, 0.02] ## link lengths in mm
def coordinate_transform(theta):

    theta_1 = theta[0]
    theta_2 = theta[1]
    d_01 = d[0]
    d_12 = d[1]
    
    T_0_1 = np.matrix([[1, 0, 0, 0],
                       [0, 1, 0, 0],
                       [0, 0, 1, 0],
                       [0, 0, 0, 1]])

    T_1_2 = np.matrix([[1, 0, 0, 0],
                       [0, 1, 0, 0],
                       [0, 0, 1, 0],
                       [0, 0, 0, 1]])

    T_2_3 = np.matrix([[1, 0, 0, 0],
                       [0, 1, 0, 0],
                       [0, 0, 1, 0],
                       [0, 0, 0, 1]])

    T_3_4 = np.matrix([[1, 0, 0, 0],
                       [0, 1, 0, 0],
                       [0, 0, 1, 0],
                       [0, 0, 0, 1]])

    T_4_5 = np.matrix([[1, 0, 0, 0],
                       [0, 1, 0, 0],
                       [0, 0, 1, 0],
                       [0, 0, 0, 1]])

    T_5_6 = np.matrix([[1, 0, 0, 0],
                       [0, 1, 0, 0],
                       [0, 0, 1, 0],
                       [0, 0, 0, 1]])

    T_6_7 = np.matrix([[1, 0, 0, 0],
                       [0, 1, 0, 0],
                       [0, 0, 1, 0],
                       [0, 0, 0, 1]])

    T_7_8 = np.matrix([[1, 0, 0, 0],
                       [0, 1, 0, 0],
                       [0, 0, 1, 0],
                       [0, 0, 0, 1]])

    p_0 = T_0_1*T_1_2*T_2_3*T_3_4*T_4_5*T_5_6*T_6_7*T_7_8*np.matrix([0,0,0,1]).T

    return np.squeeze(np.asarray(p_0))[:-1]
